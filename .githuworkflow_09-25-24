name: Docker

on:
  schedule:
    - cron: '37 18 * * *' # Scheduled run time
  push:
    branches: [ "release" ]
    tags: [ 'v*.*.*' ] # Publish semver tags as releases.
  pull_request:
    branches: [ "release" ]

env:
  REGISTRY: ghcr.io # Use GitHub Container Registry by default
  IMAGE_NAME: ${{ github.repository }} # Repository name as image name

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install cosign (skip on PR)
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry (skip on PR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for tagging and labeling 
        id: meta
        uses : docker/metadata-action@v5.0.0 
        with :
          images : ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name : Build and push Docker image (don't push on PR)
        id : build-and-push 
        uses : docker/build-push-action@v5.0.0 
        with :
          context : . 
          push : ${{ github.event_name != 'pull_request' }} 
          tags : ${{ steps.meta.outputs.tags }} 
          labels : ${{ steps.meta.outputs.labels }} 
          cache-from : type=gha  
          cache-to : type=gha,mode=max 

      - name : Sign the published Docker image (skip on PRs)
         if:${{ github.event_name != 'pull_request' }}
         env :
           TAGS:${{ steps.meta.outputs.tags }}
           DIGEST:${{ steps.build-and-push.outputs.digest }}
         run :
           echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
